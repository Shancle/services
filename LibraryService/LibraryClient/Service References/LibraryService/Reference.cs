//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryClient.LibraryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/LibraryService.Data")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LibraryClient.LibraryService.BookType BookTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublicationYearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LibraryClient.LibraryService.BookType BookType {
            get {
                return this.BookTypeField;
            }
            set {
                if ((this.BookTypeField.Equals(value) != true)) {
                    this.BookTypeField = value;
                    this.RaisePropertyChanged("BookType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublicationYear {
            get {
                return this.PublicationYearField;
            }
            set {
                if ((this.PublicationYearField.Equals(value) != true)) {
                    this.PublicationYearField = value;
                    this.RaisePropertyChanged("PublicationYear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookType", Namespace="http://schemas.datacontract.org/2004/07/LibraryService.Data")]
    public enum BookType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FictionBook = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Journal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResearchArticle = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chronicle = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryService.ILibraryService")]
    public interface ILibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/Add", ReplyAction="http://tempuri.org/ILibraryService/AddResponse")]
        void Add(LibraryClient.LibraryService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/Add", ReplyAction="http://tempuri.org/ILibraryService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(LibraryClient.LibraryService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetById", ReplyAction="http://tempuri.org/ILibraryService/GetByIdResponse")]
        LibraryClient.LibraryService.Book GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetById", ReplyAction="http://tempuri.org/ILibraryService/GetByIdResponse")]
        System.Threading.Tasks.Task<LibraryClient.LibraryService.Book> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetByAuthor", ReplyAction="http://tempuri.org/ILibraryService/GetByAuthorResponse")]
        LibraryClient.LibraryService.Book[] GetByAuthor(string author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetByAuthor", ReplyAction="http://tempuri.org/ILibraryService/GetByAuthorResponse")]
        System.Threading.Tasks.Task<LibraryClient.LibraryService.Book[]> GetByAuthorAsync(string author);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/TakeBook", ReplyAction="http://tempuri.org/ILibraryService/TakeBookResponse")]
        void TakeBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/TakeBook", ReplyAction="http://tempuri.org/ILibraryService/TakeBookResponse")]
        System.Threading.Tasks.Task TakeBookAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ReturnBook", ReplyAction="http://tempuri.org/ILibraryService/ReturnBookResponse")]
        void ReturnBook(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ReturnBook", ReplyAction="http://tempuri.org/ILibraryService/ReturnBookResponse")]
        System.Threading.Tasks.Task ReturnBookAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceChannel : LibraryClient.LibraryService.ILibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryServiceClient : System.ServiceModel.ClientBase<LibraryClient.LibraryService.ILibraryService>, LibraryClient.LibraryService.ILibraryService {
        
        public LibraryServiceClient() {
        }
        
        public LibraryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(LibraryClient.LibraryService.Book book) {
            base.Channel.Add(book);
        }
        
        public System.Threading.Tasks.Task AddAsync(LibraryClient.LibraryService.Book book) {
            return base.Channel.AddAsync(book);
        }
        
        public LibraryClient.LibraryService.Book GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<LibraryClient.LibraryService.Book> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public LibraryClient.LibraryService.Book[] GetByAuthor(string author) {
            return base.Channel.GetByAuthor(author);
        }
        
        public System.Threading.Tasks.Task<LibraryClient.LibraryService.Book[]> GetByAuthorAsync(string author) {
            return base.Channel.GetByAuthorAsync(author);
        }
        
        public void TakeBook(int id) {
            base.Channel.TakeBook(id);
        }
        
        public System.Threading.Tasks.Task TakeBookAsync(int id) {
            return base.Channel.TakeBookAsync(id);
        }
        
        public void ReturnBook(int id) {
            base.Channel.ReturnBook(id);
        }
        
        public System.Threading.Tasks.Task ReturnBookAsync(int id) {
            return base.Channel.ReturnBookAsync(id);
        }
    }
}
